{"ast":null,"code":"var _jsxFileName = \"/Users/ananthulasaivyshnav/Desktop/stylehive/src/customer/Auth/LoginForm.jsx\",\n  _s = $RefreshSig$();\nimport * as React from \"react\";\nimport { Grid, TextField, Button, Box, Snackbar, Alert } from \"@mui/material\";\nimport { useNavigate } from \"react-router-dom\";\n// import { useDispatch, useSelector } from \"react-redux\";\n// import { getUser, login } from \"../../../Redux/Auth/Action\";\n// import { useEffect } from \"react\";\n// import { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LoginUserForm({\n  handleNext\n}) {\n  _s();\n  const navigate = useNavigate();\n  //   const dispatch=useDispatch();\n  //   const jwt=localStorage.getItem(\"jwt\");\n  //   const [openSnackBar,setOpenSnackBar]=useState(false);\n  //   const { auth } = useSelector((store) => store);\n  //   const handleCloseSnakbar=()=>setOpenSnackBar(false);\n  //   useEffect(()=>{\n  //     if(jwt){\n  //       dispatch(getUser(jwt))\n  //     }\n\n  //   },[jwt])\n\n  //     useEffect(() => {\n  //       if (auth.user || auth.error) setOpenSnackBar(true)\n  //     }, [auth.user]);\n  const handleSubmit = event => {\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n    const userData = {\n      email: data.get(\"email\"),\n      password: data.get(\"password\")\n    };\n    console.log(\"login user\", userData);\n\n    // dispatch(login(userData));\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    className: \" shadow-lg \",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"w-full\",\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            required: true,\n            id: \"email\",\n            name: \"email\",\n            label: \"Email\",\n            fullWidth: true,\n            autoComplete: \"given-name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            required: true,\n            id: \"password\",\n            name: \"password\",\n            label: \"Password\",\n            fullWidth: true,\n            autoComplete: \"given-name\",\n            type: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            className: \"bg-[#9155FD] w-full\",\n            type: \"submit\",\n            variant: \"contained\",\n            size: \"large\",\n            sx: {\n              padding: \".8rem 0\"\n            },\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center flex-col items-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"py-3 flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"m-0 p-0\",\n          children: \"don't have account ?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => navigate(\"/register\"),\n          className: \"ml-5\",\n          size: \"small\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginUserForm, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginUserForm;\nvar _c;\n$RefreshReg$(_c, \"LoginUserForm\");","map":{"version":3,"names":["React","Grid","TextField","Button","Box","Snackbar","Alert","useNavigate","jsxDEV","_jsxDEV","LoginUserForm","handleNext","_s","navigate","handleSubmit","event","preventDefault","data","FormData","currentTarget","userData","email","get","password","console","log","Fragment","className","children","onSubmit","container","spacing","item","xs","required","id","name","label","fullWidth","autoComplete","fileName","_jsxFileName","lineNumber","columnNumber","type","variant","size","sx","padding","onClick","_c","$RefreshReg$"],"sources":["/Users/ananthulasaivyshnav/Desktop/stylehive/src/customer/Auth/LoginForm.jsx"],"sourcesContent":["import * as React from \"react\";\nimport { Grid, TextField, Button, Box, Snackbar, Alert } from \"@mui/material\";\nimport { useNavigate } from \"react-router-dom\";\n// import { useDispatch, useSelector } from \"react-redux\";\n// import { getUser, login } from \"../../../Redux/Auth/Action\";\n// import { useEffect } from \"react\";\n// import { useState } from \"react\";\n\nexport default function LoginUserForm({ handleNext }) {\n  const navigate = useNavigate();\n//   const dispatch=useDispatch();\n//   const jwt=localStorage.getItem(\"jwt\");\n//   const [openSnackBar,setOpenSnackBar]=useState(false);\n//   const { auth } = useSelector((store) => store);\n//   const handleCloseSnakbar=()=>setOpenSnackBar(false);\n//   useEffect(()=>{\n//     if(jwt){\n//       dispatch(getUser(jwt))\n//     }\n  \n//   },[jwt])\n  \n  \n//     useEffect(() => {\n//       if (auth.user || auth.error) setOpenSnackBar(true)\n//     }, [auth.user]);\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n    \n    const userData={\n      email: data.get(\"email\"),\n      password: data.get(\"password\"),\n     \n    }\n    console.log(\"login user\",userData);\n  \n    // dispatch(login(userData));\n\n  };\n\n  return (\n    <React.Fragment className=\" shadow-lg \">\n      <form className=\"w-full\" onSubmit={handleSubmit}>\n        <Grid container spacing={3}>\n          <Grid item xs={12}>\n            <TextField\n              required\n              id=\"email\"\n              name=\"email\"\n              label=\"Email\"\n              fullWidth\n              autoComplete=\"given-name\"\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              required\n              id=\"password\"\n              name=\"password\"\n              label=\"Password\"\n              fullWidth\n              autoComplete=\"given-name\"\n              type=\"password\"\n            />\n          </Grid>\n\n          <Grid item xs={12}>\n            <Button\n              className=\"bg-[#9155FD] w-full\"\n              type=\"submit\"\n              variant=\"contained\"\n              size=\"large\"\n              sx={{padding:\".8rem 0\"}}\n            >\n              Login\n            </Button>\n          </Grid>\n        </Grid>\n      </form>\n      <div className=\"flex justify-center flex-col items-center\">\n         <div className=\"py-3 flex items-center\">\n        <p className=\"m-0 p-0\">don't have account ?</p>\n        <Button onClick={()=> navigate(\"/register\")} className=\"ml-5\" size=\"small\">\n          Register\n        </Button>\n        </div>\n      </div>\n      {/* <Snackbar open={openSnackBar} autoHideDuration={6000} onClose={handleCloseSnakbar}>\n        <Alert onClose={handleCloseSnakbar} severity=\"success\" sx={{ width: '100%' }}>\n          {auth.error?auth.error:auth.user?\"Register Success\":\"\"}\n        </Alert>\n      </Snackbar> */}\n    </React.Fragment>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}